package p2_intermediate.p2_classAndObject.p3_parametersOfFunction

/*
在定义函数时，可以声明函数需要接受0个或多个参数。
通常我们称声明语句中的参数为形式参数(简称“形参”)，
称调用函数中传递的参数为实际参数(简称“实参”)。

在调用函数时，实参会按照在参数列表中的位置被绑定到声明函数时的形参上。
在绑定过程时，要求实参的类型必须和形参的类型保持一致或相兼容。
通过下面的函数来分析一下形参和实参，具体代码如下:
*/
//声明一个加法函数
fun add(x: Int, y: Int): Int {
    return x + y
}

fun main() {
//调用函数
    add(2, 8)
}
/*
这段代马声明了一个加法函数， 其中“x:Int,y:Int""中的x和y就是形参，
它们在这里相当于占位符，只是表示该函数被调用时可以接受两个整型的参数，
而“add(2,8)”这句语句中的数字”2”和”8” 就是实参，
代码运行时它们的值会按照位置被绑定到形参x和y上.
绑定参数时是按照按值传递的。
*/