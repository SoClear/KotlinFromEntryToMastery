package p1_introductory.p1_basicConcepts

/*
注释主要用于对代码进行解释说明。通俗一点说就是说明某段代码是做什么的。
注释只被保存在源文件中，在字节码文件中不会有注释信息。

kotlin的注释与java基本一致。可以分为单行注释、多行注释和文档注释。

1.单行注释
单行注释就是注释语句只占一行。一般建议，单行注释放在单独的一行，而不是放在代码的后面。
单行注释，需要将注释用的说明文字放在双斜线（//）后面。
在实际应用中，单行注释一般用于说明函数内部的语句。

【举例】下面演示了单行注释
fun getProduct(productCode:String):Product{
    //根据产品代码获得产品信息
    val product=productMapper.findById(productCode)
}



2.多行注释
多行注释就是指占用多行的程序语句。多行注释需要将注释用的说明文件放在“/*”和“*/”符合之间。
在实际应用中，多行注释主要用于说明注释类中的属性或方法。

kotlin中的多行注释和java的多行注释有一点不同：
kotlin中的多行注释支持嵌套，即允许“/*”和“*/”符合之间重复出现“/*”和“*/”符号。

下面代码演示了多行注释：
/*
根据产品代码获得产品信息。
    /*
        （注释嵌套）如果找不到对应的产品，则返回空
    */
 */




3.文档注释
文档注释需要就注释用的说明文字放在“/*”和“*/”符号之间。
文档注释的内容会被保存在源代码生成的API文档中。
在实际应用中，如果编写的是供他人使用的程序，则应该尽量多使用文档注释

下面演示了文档注释的用法：
 */

/**
 * 产品Dao
 *
 * @author Peter
 * @since 1.0
 */


