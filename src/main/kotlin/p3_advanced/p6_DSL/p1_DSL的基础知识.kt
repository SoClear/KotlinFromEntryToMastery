package p3_advanced.p6_DSL

/*
1.了解领域特定语言
DSL被设计用于在特定的领域中解决特定的问题。
数据库使用的SQL语言就是一种最著名的领域特定语言，它只是用于解决数据库这一领域的问题的，开发者基本不能用它来编写一个完整的应用程序。
而常见的java，kotlin和go语言都属于通用编程语言，这种类型的语言都属于通用编程语言，这种类型的语言被设计用来解决计算机所能解决的各种领域的问题。
领域特定语言虽然在提供的功能和使用场景都不如通用编程语言那样丰富，但是相比通用编程语言，它有以下两个优点：
1。领域特定语言往往比通用语言省略了大量的中间代码，所以能够更简洁地表达在该领域中执行的各种操作。
2。领域特定语言通常更符合人类的语言习惯，所以它们的学习成本更低。

2.了解DSL的创建使用场景
DSL由于语法简单所以被应用于各个领域，下面列举了一些常见的使用场景
数据库层面：SQL
文本解析：正则表达式
构建工具：Gradle、sbt
页面生成：Freemarker、JSX、Anko
软件测试：各种测试框架


3.了解DSL的分类
DSL通常可以按照实现方式分为外部DSL和内部DSL两种

外部DSL通常保存在应用程序之外，由特定的DSL语言编写。普通应用很难直接和外部DSL进行数据交互或者相互调用。
SQL脚本就是一种典型的外部DSL，它由专门的SQL语言进行编写，保存在单独的“.sql”文件中，需要通过各个数据库厂商提供的数据库驱动程序才能与应用程序进行交互。

内部DSL是指在应用程序中用通用编程语言实现的DSL语言，即使用语言来创造语言。
内部DSL通常和实际应用程序采用相同或者兼容的语言进行编写，所以它们可以很容易和应用程序进行直接交互
 */